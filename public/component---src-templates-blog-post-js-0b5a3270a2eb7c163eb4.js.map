{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/toc.tsx","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","avatar","social","childImageSharp","fixed","className","alt","name","imgStyle","borderRadius","summary","TOCWrapper","styled","div","TOCTable","Container","TableOfContents","props","dangerouslySetInnerHTML","__html","content","PostHeadLine","PostHeader","h1","Tag","Headline","blockquote","Article","ImageContainer","BlogPostTemplate","location","post","markdownRemark","TOC","tableOfContents","siteTitle","title","thumbnailImgFluid","frontmatter","thumbnail","fluid","previous","next","maxWidth","description","excerpt","itemScope","itemType","itemProp","date","to","tag","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"mappings":"6FAAA,0DAkEeA,IAvDH,WAAO,IAAD,QACVC,EAAOC,yBAAe,aAwBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAGjCG,GAFM,UAAGL,EAAKG,KAAKC,oBAAb,OAAG,EAAwBE,OAExBN,SAAH,UAAGA,EAAMK,cAAT,iBAAG,EAAcE,uBAAjB,aAAG,EAA+BC,OAE9C,OACE,yBAAKC,UAAU,OACZJ,GACC,kBAAC,IAAD,CACEG,MAAOH,EACPK,KAAKR,aAAA,EAAAA,EAAQS,OAAR,GACLF,UAAU,aACVG,SAAU,CACRC,aAAa,UAIlBX,aAAA,EAAAA,EAAQS,OACP,mCAEE,6BACA,6BACA,oCAAUT,EAAOS,MAJnB,KAImCT,aAAA,EAAAA,EAAQY,UAAW,KAJtD,Q,iLCnDFC,EAAaC,IAAOC,IAAV,2VAkBVC,EAAWF,IAAOC,IAAV,oDAIRE,EAAYH,IAAOC,IAAV,yMAyCAG,EAjBwC,SAAEC,GACrD,OACI,kBAACF,EAAD,KACI,kBAACJ,EAAD,KAII,kBAACG,EAAD,CACII,wBAAyB,CAAEC,OAAQF,EAAMG,cC/CvDC,EAAeT,IAAOC,IAAV,oHAOZS,EAAaV,IAAOW,GAAV,6FAMVC,EAAMZ,IAAOC,IAAV,0KASHY,EAAWb,IAAOc,WAAV,4KASRC,EAAUf,IAAOC,IAAV,o/BAgEPe,EAAiBhB,IAAOC,IAAV,8MAmFLgB,UAvEU,SAAC,GAAwB,IAAD,IAArBjC,EAAqB,EAArBA,KAAMkC,EAAe,EAAfA,SAC1BC,EAAOnC,EAAKoC,eACZC,EAAMF,EAAKG,gBACXC,GAAY,UAAAvC,EAAKG,KAAKC,oBAAV,eAAwBoC,QAAxB,QACdC,EAAiB,UAAGN,EAAKO,YAAYC,iBAApB,aAAG,EAA4BpC,gBAAgBqC,MAC5DC,EAAmB7C,EAAnB6C,SAAUC,EAAS9C,EAAT8C,KAElB,OACE,oCACE,kBAAC,EAAD,CAAiBtB,QAAUa,IAC3B,kBAAC,IAAD,CAAQH,SAAUA,EAAUM,MAAOD,EAAWQ,SAAS,SACrD,kBAAC,IAAD,CACEP,MAAOL,EAAKO,YAAYF,MACxBQ,YAAab,EAAKO,YAAYM,aAAeb,EAAKc,UAEpD,6BACExC,UAAU,YACVyC,WAAS,EACTC,SAAS,6BAET,kBAAC1B,EAAD,KACE,kBAACO,EAAD,KACIS,EAAoB,kBAAC,IAAD,CAAKG,MAAOH,IAAuB,sCAE3D,kBAACf,EAAD,CAAY0B,SAAS,YAAYjB,EAAKO,YAAYF,OAClD,2BAAIL,EAAKO,YAAYW,MACrB,kBAAC,OAAD,CAAMC,GAAE,IAAMnB,EAAKO,YAAYa,KAC7B,kBAAC3B,EAAD,SAAOO,EAAKO,YAAYa,OAG5B,kBAAC1B,EAAD,KAAWM,EAAKO,YAAYM,aAC5B,kBAACjB,EAAD,CACET,wBAAyB,CAAEC,OAAQY,EAAKqB,MACxCJ,SAAS,gBAGX,kCAIF,yBAAK3C,UAAU,iBACb,wBACEgD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGjB,GACC,kBAAC,OAAD,CAAMS,GAAIT,EAASkB,OAAOC,KAAMC,IAAI,QAApC,KACKpB,EAASH,YAAYF,QAI9B,4BACGM,GACC,kBAAC,OAAD,CAAMQ,GAAIR,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKJ,YAAYF,MADpB","file":"component---src-templates-blog-post-js-0b5a3270a2eb7c163eb4.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <p>\n          반갑습니다\n          <br/>\n          <br/>\n          <strong> {author.name}</strong> {author?.summary || null}\n          {` `}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TOCWrapper = styled.div`\n    position: sticky;\n    top: 30%;\n    right: 3rem;\n    height: fit-content;\n    background-color: white;\n    width: 100%;\n    padding: 1rem;\n    border-left: 1px solid #ebebe8;\n    a {\n        transition: 0.3s;\n    }\n    a:hover {\n        /* font-weight: bold; */\n        color: #1eb49f;        \n    }\n`;\n\nconst TOCTable = styled.div`\n    font-size: 0.9rem;\n`;\n\nconst Container = styled.div`\n    position: absolute;\n    right: 3rem;\n    top: 0;\n    width: 15%;\n    height: 100%;\n    @media only screen and (max-width: 1300px) {\n        display: none;\n    }\n`;\n\n// const Title = styled.h1`\n//     font-size: 1.3rem;\n//     width: 100%;\n//     text-align: center;\n//     font-weight: bold;\n//     margin-bottom: 2rem;\n//     color: #1EB49F;\n// `;\n\ntype TableOfContentsProps = {\n    content: string\n}\n\nconst TableOfContents:React.FC<TableOfContentsProps> = ( props ) => {\n    return (\n        <Container>\n            <TOCWrapper>\n                {/* <Title>\n                    Preview\n                </Title> */}\n                <TOCTable\n                    dangerouslySetInnerHTML={{ __html: props.content }}>\n                </TOCTable>\n            </TOCWrapper>\n        </Container>\n\n        \n    )\n}\n\nexport default TableOfContents;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\nimport TableOfContents from \"../components/toc\"\nimport styled from 'styled-components';\n\nconst PostHeadLine = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  margin: 2rem 0%;\n`;\n\nconst PostHeader = styled.h1`\n  margin: 1rem 0rem;\n  font-weight: 500;  \n  font-size: 3rem;\n`;\n\nconst Tag = styled.div`\n  padding: 0.5rem 0.8rem;\n  font-size: 0.8rem;\n  color: white;\n  border-radius: 4px;\n  background-color: #1EB49F;\n  width: fit-content;\n`;\n\nconst Headline = styled.blockquote`\n  padding: 0 0 0 1.5rem;\n  margin: 1.5rem 0;\n  font-size: 1.2rem;\n  border-left: 0.3rem solid #1EB49F;\n  line-height: 1.2;\n  color: #222;\n`;\n\nconst Article = styled.div`\n  margin: 3rem 0;\n  word-break: break-all;\n  p {\n    font-size: 1.1rem;\n    margin-bottom: 1.5rem;\n  }\n\n  h1 {\n    color: #1EB49F;\n    line-height: 1.5;\n    margin-bottom: 1rem;\n  }\n\n  h2, h3 {\n    line-height: 1.5;\n    margin-bottom: 1rem;\n  }\n\n  pre, code {\n    margin: 1rem 0rem;\n  }\n\n  code {\n    color: #1EB49F;\n    font-family: 'RIDIBatang' !important;\n  }\n\n  pre code {\n    font-family: Consolas, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif, monospace;\n    color: #363738;\n  }\n\n  a {\n    color: #1B60FF;\n    position: relative;\n  }\n\n  a:hover:after {\n    width: 100%;\n  }\n\n  a:after {\n    content: \"\";\n    position: absolute;\n    width: 0;\n    height: 1.5px;\n    background-color: #1B60FF;\n    left: 0;\n    bottom: 0;\n    transition: 0.3s;\n  }\n\n\n  em {\n    font-weight: bold;\n    color: #1EB49F;\n  }\n\n  hr {\n    margin: 2.5rem 0;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  .gatsby-image-wrapper {\n    width: 70%;\n    margin: 0 auto;\n  }\n  @media only screen and (max-width: 48rem) {\n    .gatsby-image-wrapper {\n      width: 100%;\n    }\n  }\n`;\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const TOC = post.tableOfContents;\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  let thumbnailImgFluid = post.frontmatter.thumbnail?.childImageSharp.fluid\n  const { previous, next } = data\n\n  return (\n    <>\n      <TableOfContents content={ TOC } />\n      <Layout location={location} title={siteTitle} maxWidth=\"48rem\">\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <PostHeadLine>\n            <ImageContainer>\n              { thumbnailImgFluid ? <Img fluid={thumbnailImgFluid}/> : <></>}\n            </ImageContainer>\n            <PostHeader itemProp=\"headline\">{post.frontmatter.title}</PostHeader>\n            <p>{post.frontmatter.date}</p>\n            <Link to={`/${post.frontmatter.tag}`}>\n              <Tag>#{post.frontmatter.tag}</Tag>\n            </Link>\n          </PostHeadLine>\n          <Headline>{post.frontmatter.description}</Headline>\n          <Article\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n          {/* <hr /> */}\n          <footer>\n            {/* <Bio /> */}\n          </footer>\n        </article>\n        <nav className=\"blog-post-nav\">\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    </>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n        tag\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}