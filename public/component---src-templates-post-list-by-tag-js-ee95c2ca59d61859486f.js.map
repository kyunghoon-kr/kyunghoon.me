{"version":3,"sources":["webpack:///./src/components/post/post.tsx","webpack:///./src/templates/post-list-by-tag.js","webpack:///./src/templates/post-list.tsx"],"names":["PostCard","styled","div","PostImgBackground","PostDescription","PostImgWrapper","Post","post","title","thumbnailImgFluid","frontmatter","thumbnail","childImageSharp","fluid","itemScope","itemType","to","fields","slug","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","PostListByTag","data","location","tag","search","pageContext","posts","allMarkdownRemark","nodes","filter","PostListWrapper","PostList","map","key"],"mappings":"uLAWMA,EAAWC,IAAOC,IAAV,mcAqBRC,EAAoBF,IAAOC,IAAV,6EAKjBE,EAAkBH,IAAOC,IAAV,geAuBfG,EAAiBJ,IAAOC,IAAV,qLA2CLI,IA/BkB,SAAC,GAAoB,MAAlBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClCC,EAAiB,UAAGF,EAAKG,YAAYC,iBAApB,aAAG,EAA4BC,gBAAgBC,MACpE,OACE,kBAACb,EAAD,CACIc,WAAS,EACTC,SAAS,6BAEX,kBAAC,OAAD,CAAMC,GAAIT,EAAKU,OAAOC,KAAMC,SAAS,OACnC,gCACE,kBAAChB,EAAD,MACA,kBAACE,EAAD,KACE,kBAAC,IAAD,CAAKQ,MAAOJ,MAGhB,kBAACL,EAAD,KACE,4BACE,0BAAMe,SAAS,YAAYX,IAE7B,+BAAQD,EAAKG,YAAYU,MACzB,uBACEC,wBAAyB,CACvBC,OAAQf,EAAKG,YAAYa,aAAehB,EAAKiB,SAE/CL,SAAS,qB,kCC/FvB,oEAuBeM,UAbO,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SACnBC,GADuD,EAA1BC,OAA0B,EAAlBC,YACrCF,KACFG,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUnB,MAAOoB,GACjC,kBAAC,IAAD,CAAKpB,MAAM,UAEX,kBAAC,IAAD,CAAUuB,MAAOA,EAAMG,QAAO,SAAA3B,GAAI,OAAIA,EAAKG,YAAYkB,MAAQA,U,iGCRjEO,EAAkBlC,IAAOC,IAAV,8HAoBNkC,IAb0B,SAAC,GAAc,IAAZL,EAAY,EAAZA,MACxC,OACI,kBAACI,EAAD,KACKJ,EAAMM,KAAI,SAAA9B,GACP,IAAMC,EAAQD,EAAKG,YAAYF,OAASD,EAAKU,OAAOC,KACpD,OACA,kBAAC,IAAD,CAAMoB,IAAK/B,EAAKU,OAAOC,KAAMX,KAAMA,EAAMC,MAAOA","file":"component---src-templates-post-list-by-tag-js-ee95c2ca59d61859486f.js","sourcesContent":["import React from 'react';\nimport { Link } from \"gatsby\"\nimport { PostModel } from '../../models/post';\nimport styled from 'styled-components';\nimport Img from \"gatsby-image\";\n\ninterface PostProps {\n    post: PostModel,\n    title: string\n}\n\nconst PostCard = styled.div`\n    width: 30.3333%;\n    margin: 0 1.5%;\n    position: relative;\n    border: 1px solid #ebebe8;\n    margin-bottom: 2rem;\n    box-shadow: 0px 0px 10px rgb(0 0 0 / 10%);\n    .gatsby-image-wrapper {\n      transition: transform 0.3s;\n      overflow: hidden;\n    }\n\n    &:hover .gatsby-image-wrapper {\n      transform: scale(1.1);\n    }\n\n    @media only screen and (max-width: 48rem) {\n      width: 47%;\n    }\n`;\n\nconst PostImgBackground = styled.div`\n    height: 10rem;\n    background-color: #444;\n`;\n\nconst PostDescription = styled.div`\n    margin: 4rem 1rem 3rem;\n    h2 {\n      font-weight: bold;\n      margin-bottom: 0.5rem;\n      font-size: 1.2rem;\n    }\n    small {\n      font-size: 0.9rem;\n      line-height: 1.5;\n    }\n    p {\n      font-size: 0.94rem;\n      text-overflow: ellipsis;\n      white-space: pre-line;\n      overflow: hidden;\n      overflow-y: hidden;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      display: -webkit-box;\n    }\n`;\n\nconst PostImgWrapper = styled.div`\n    position: absolute;\n    top: 2rem;\n    left: 10%;\n    width: 80%;\n    height: 10rem;\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n`;\n\nconst Post:React.FC<PostProps> = ({ post, title }) => {\n    let thumbnailImgFluid = post.frontmatter.thumbnail?.childImageSharp.fluid\n    return (\n      <PostCard\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n        <Link to={post.fields.slug} itemProp=\"url\">\n          <header>\n            <PostImgBackground/>\n            <PostImgWrapper>\n              <Img fluid={thumbnailImgFluid}/>\n            </PostImgWrapper>\n          </header>\n          <PostDescription>\n            <h2>\n              <span itemProp=\"headline\">{title}</span>\n            </h2>\n            <small>{post.frontmatter.date}</small>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: post.frontmatter.description || post.excerpt,\n              }}\n              itemProp=\"description\"\n            />\n          </PostDescription>\n        </Link>\n      </PostCard>\n      )\n}\n\nexport default Post\n","import React from \"react\"\n// import { Link } from \"gatsby\"\n\n// import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n// import Post from \"../components/post/post\"\n// import styled  from 'styled-components';\nimport PostList from './post-list'\n\nconst PostListByTag = ({ data, location, search, pageContext }) => {\n    const { tag } = pageContext\n    const posts = data.allMarkdownRemark.nodes\n  \n    return (\n      <Layout location={location} title={tag}>\n        <SEO title=\"Posts\" />\n        {/* <Bio /> */}\n        <PostList posts={posts.filter(post => post.frontmatter.tag === tag)} />\n      </Layout>\n    )\n  }\n  \nexport default PostListByTag;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          tag\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 1200) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\n\n","import React from 'react';\nimport { Link } from \"gatsby\"\nimport { PostModel } from '../models/post';\nimport styled from 'styled-components';\nimport Post from '../components/post/post';\n\ninterface PostListProps {\n    posts: PostModel[]\n}\n\nconst PostListWrapper = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    padding: 4rem 0;\n`;\n\nconst PostList:React.FC<PostListProps> = ({ posts }) => {\n    return (\n        <PostListWrapper>\n            {posts.map(post => {\n                const title = post.frontmatter.title || post.fields.slug\n                return (\n                <Post key={post.fields.slug} post={post} title={title} />\n                )\n            })}\n        </PostListWrapper>\n    )\n}\n\nexport default PostList;\n"],"sourceRoot":""}