{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/post/post.tsx","webpack:///./src/pages/index.js","webpack:///./src/templates/post-list.tsx"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","avatar","social","childImageSharp","fixed","className","alt","name","imgStyle","borderRadius","summary","PostCard","styled","div","PostImgBackground","PostDescription","PostImgWrapper","Post","post","title","thumbnailImgFluid","frontmatter","thumbnail","fluid","itemScope","itemType","to","fields","slug","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","BlogIndex","location","siteTitle","posts","allMarkdownRemark","nodes","length","role","aria-label","PostListWrapper","PostList","map","key"],"mappings":"6FAAA,0DAkEeA,IAvDH,WAAO,IAAD,QACVC,EAAOC,yBAAe,aAwBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAGjCG,GAFM,UAAGL,EAAKG,KAAKC,oBAAb,OAAG,EAAwBE,OAExBN,SAAH,UAAGA,EAAMK,cAAT,iBAAG,EAAcE,uBAAjB,aAAG,EAA+BC,OAE9C,OACE,yBAAKC,UAAU,OACZJ,GACC,kBAAC,IAAD,CACEG,MAAOH,EACPK,KAAKR,aAAA,EAAAA,EAAQS,OAAR,GACLF,UAAU,aACVG,SAAU,CACRC,aAAa,UAIlBX,aAAA,EAAAA,EAAQS,OACP,mCAEE,6BACA,6BACA,oCAAUT,EAAOS,MAJnB,KAImCT,aAAA,EAAAA,EAAQY,UAAW,KAJtD,Q,oCCtDR,sEAWMC,EAAWC,IAAOC,IAAV,qEAAGD,CAAH,mTAqBRE,EAAoBF,IAAOC,IAAV,8EAAGD,CAAH,yCAKjBG,EAAkBH,IAAOC,IAAV,4EAAGD,CAAH,uSAuBfI,EAAiBJ,IAAOC,IAAV,2EAAGD,CAAH,oGA8CLK,IAlCkB,SAAC,GAAoB,MAAlBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClCC,EAAiB,UAAGF,EAAKG,YAAYC,iBAApB,aAAG,EAA4BnB,gBAAgBoB,MACpE,OACE,kBAACZ,EAAD,CACIa,WAAS,EACTC,SAAS,6BAEX,kBAAC,OAAD,CAAMC,GAAIR,EAAKS,OAAOC,KAAMC,SAAS,OACrC,gCACE,kBAACf,EAAD,MACIM,GACF,kBAACJ,EAAD,KACE,kBAAC,IAAD,CAAKO,MAAOH,MAKhB,kBAACL,EAAD,KACE,4BACE,0BAAMc,SAAS,YAAYV,IAE7B,+BAAQD,EAAKG,YAAYS,MACzB,uBACEC,wBAAyB,CACvBC,OAAQd,EAAKG,YAAYY,aAAef,EAAKgB,SAE/CL,SAAS,qB,kCClGvB,4FAqCeM,UA5BG,SAAC,GAAwB,IAAD,EAArBvC,EAAqB,EAArBA,KAAMwC,EAAe,EAAfA,SACnBC,GAAY,UAAAzC,EAAKG,KAAKC,oBAAV,eAAwBmB,QAAxB,QACZmB,EAAQ1C,EAAK2C,kBAAkBC,MACrC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQL,SAAUA,EAAUjB,MAAOkB,GACjC,kBAAC,IAAD,CAAKlB,MAAM,cACX,kBAAC,IAAD,MACA,uCAEE,0BAAMuB,KAAK,MAAMC,aAAW,WAA5B,QAON,oCACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUjB,MAAOkB,GACjC,kBAAC,IAAD,CAAKlB,MAAM,OAAOc,YAAY,6BAE9B,kBAAC,IAAD,CAAUK,MAAOA,Q,kCC9BzB,iDAUMM,EAAkBhC,IAAOC,IAAV,gFAAGD,CAAH,8EAoBNiC,IAb0B,SAAC,GAAc,IAAZP,EAAY,EAAZA,MACxC,OACI,kBAACM,EAAD,KACKN,EAAMQ,KAAI,SAAA5B,GACP,IAAMC,EAAQD,EAAKG,YAAYF,OAASD,EAAKS,OAAOC,KACpD,OACA,kBAAC,IAAD,CAAMmB,IAAK7B,EAAKS,OAAOC,KAAMV,KAAMA,EAAMC,MAAOA","file":"component---src-pages-index-js-6136e3294d962cf0b634.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <p>\n          Î∞òÍ∞ëÏäµÎãàÎã§\n          <br/>\n          <br/>\n          <strong> {author.name}</strong> {author?.summary || null}\n          {` `}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react';\nimport { Link } from \"gatsby\"\nimport { PostModel } from '../../models/post';\nimport styled from 'styled-components';\nimport Img from \"gatsby-image\";\n\ninterface PostProps {\n    post: PostModel,\n    title: string\n}\n\nconst PostCard = styled.div`\n    width: 30.3333%;\n    margin: 0 1.5%;\n    position: relative;\n    border: 1px solid #ebebe8;\n    margin-bottom: 2rem;\n    box-shadow: 0px 0px 10px rgb(0 0 0 / 10%);\n    .gatsby-image-wrapper {\n      transition: transform 0.3s;\n      overflow: hidden;\n    }\n\n    &:hover .gatsby-image-wrapper {\n      transform: scale(1.1);\n    }\n\n    @media only screen and (max-width: 48rem) {\n      width: 47%;\n    }\n`;\n\nconst PostImgBackground = styled.div`\n    height: 10rem;\n    background-color: #444;\n`;\n\nconst PostDescription = styled.div`\n    margin: 4rem 1rem 3rem;\n    h2 {\n      font-weight: bold;\n      margin-bottom: 0.5rem;\n      font-size: 1.2rem;\n    }\n    small {\n      font-size: 0.9rem;\n      line-height: 1.5;\n    }\n    p {\n      font-size: 0.94rem;\n      text-overflow: ellipsis;\n      white-space: pre-line;\n      overflow: hidden;\n      overflow-y: hidden;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      display: -webkit-box;\n    }\n`;\n\nconst PostImgWrapper = styled.div`\n    position: absolute;\n    top: 2rem;\n    left: 10%;\n    width: 80%;\n    height: 10rem;\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n`;\n\nconst Post:React.FC<PostProps> = ({ post, title }) => {\n    let thumbnailImgFluid = post.frontmatter.thumbnail?.childImageSharp.fluid\n    return (\n      <PostCard\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n        <Link to={post.fields.slug} itemProp=\"url\">\n        <header>\n          <PostImgBackground/>\n            { thumbnailImgFluid && \n            <PostImgWrapper>\n              <Img fluid={thumbnailImgFluid}/>\n            </PostImgWrapper>\n            }\n        </header>\n          \n          <PostDescription>\n            <h2>\n              <span itemProp=\"headline\">{title}</span>\n            </h2>\n            <small>{post.frontmatter.date}</small>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: post.frontmatter.description || post.excerpt,\n              }}\n              itemProp=\"description\"\n            />\n          </PostDescription>\n        </Link>\n      </PostCard>\n      )\n}\n\nexport default Post\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Post from \"../components/post/post\"\nimport PostList from \"../templates/post-list\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          Ìè¨Ïä§Ìä∏Í∞Ä ÎπÑÏóàÎÑ§Ïöî \n          <span role=\"img\" aria-label=\"no-post\">ü•∫</span>\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <>\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Main\" description=\"Î∞òÍ∞ëÏäµÎãàÎã§, JuneÏùò Í∞úÎ∞ú ÏïÑÏπ¥Ïù¥Î∏åÏûÖÎãàÎã§.\"/>\n        {/* <Bio /> */}\n        <PostList posts={posts} />\n\n      </Layout>\n      </>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          tag\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 1200) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from \"gatsby\"\nimport { PostModel } from '../models/post';\nimport styled from 'styled-components';\nimport Post from '../components/post/post';\n\ninterface PostListProps {\n    posts: PostModel[]\n}\n\nconst PostListWrapper = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    padding: 4.2rem 0;\n`;\n\nconst PostList:React.FC<PostListProps> = ({ posts }) => {\n    return (\n        <PostListWrapper>\n            {posts.map(post => {\n                const title = post.frontmatter.title || post.fields.slug\n                return (\n                <Post key={post.fields.slug} post={post} title={title} />\n                )\n            })}\n        </PostListWrapper>\n    )\n}\n\nexport default PostList;\n"],"sourceRoot":""}